{"version":3,"file":"integration.js","sourceRoot":"","sources":["integration.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA,sCAAmE;AACnE,6CAAkD;AAClD,0DAA4D;AAC5D,0CAA2C;AAE3C,wDAA0D;AAC1D,sEAAwE;AACxE,mEAAqE;AAErE,IAAM,MAAM,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;AAC/D,IAAI,WAAW,CAAC;AAChB,IAAM,SAAS,GAAG,EAAE,CAAC;AACrB,cAAc,CAAC,MAAM,CAAC;IAClB,GAAG,EAAE,UAAS,QAAQ;QAClB,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC5B;CACJ,CAAC,CAAC;;IAIC,6BAA8B,UAAe,MAAc,EAAc;QACrE,UAAU,CAAC,MAAM,CAAC;YACd,SAAS,EAAE,QAAQ;YAEnB,MAAM,EAAE;gBAAA,iBAQP;gBARgB,cAAO;qBAAP,UAAO,EAAP,qBAAO,EAAP,IAAO;oBAAP,yBAAO;;gBACpB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;iBAC1C;gBAED,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC;oBAC5B,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAI,EAAE,IAAI,CAAC,CAAC;iBAC1C,CAAC,CAAC;aACN;YAED,aAAa,EAAE,UAAS,OAAO;gBAC3B,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,CAAC,CAAC;aAC5C;YAED,UAAU,EAAE,UAAS,OAAO;gBACxB,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,CAAC,CAAC;aAC5C;YAED,UAAU,EAAE,UAAS,OAAO;gBACxB,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,CAAC,CAAC;aAC5C;SACJ,CAAC,CAAC;QAEH,WAAW,CAAC,MAAM,CAAC;YACf,MAAM,EAAE;gBACJ,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;oBACd,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBACpC;gBACD,IAAI,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;gBAC9B,EAAE,CAAC,CAAC,CAAC,CAAC,iBAAiB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC;iBACnC;gBAED,MAAM,CAAC,IAAI,CAAC;aACf;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,GAAG,CAAC;YACP,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACrB,SAAS,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAhC,CAAgC,CAAC,CAAC;YAChE,cAAc,CAAC,IAAI,EAAE,CAAC;SACzB,CAAC,CAAC;KACN;;gBAhDJ,eAAQ,SAAC,EAAE;;;;gDAEK,aAAM,SAAC,iBAAQ;gBArBL,aAAM;gBACxB,iBAAU,uBAoB+C,eAAQ;;8BAnC1E;;AAkCa,kDAAmB","sourcesContent":["/*!\n * devextreme-angular\n * Version: 18.1.6\n * Build date: Wed Sep 05 2018\n *\n * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n\r\nimport { NgModule, Inject, NgZone, Optional } from '@angular/core';\r\nimport { XhrFactory } from '@angular/common/http';\r\nimport * as httpRequest from 'devextreme/core/http_request';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\nimport * as domAdapter from 'devextreme/core/dom_adapter';\r\nimport * as readyCallbacks from 'devextreme/core/utils/ready_callbacks';\r\nimport * as eventsEngine from 'devextreme/events/core/events_engine';\r\n\r\nconst events = ['mousemove', 'mouseover', 'mouseout', 'wheel'];\r\nlet originalAdd;\r\nconst callbacks = [];\r\nreadyCallbacks.inject({\r\n    add: function(callback) {\r\n        originalAdd = this.callBase.bind(this);\r\n        callbacks.push(callback);\r\n    }\r\n});\r\n\r\n@NgModule({})\r\nexport class DxIntegrationModule {\r\n    constructor(@Inject(DOCUMENT) document: any, ngZone: NgZone, @Optional() xhrFactory: XhrFactory) {\r\n        domAdapter.inject({\r\n            _document: document,\r\n\r\n            listen: function(...args) {\r\n                if (events.indexOf(args[1]) === -1) {\r\n                    return this.callBase.apply(this, args);\r\n                }\r\n\r\n                return ngZone.runOutsideAngular(() => {\r\n                    return this.callBase.apply(this, args);\r\n                });\r\n            },\r\n\r\n            isElementNode: function(element) {\r\n                return element && element.nodeType === 1;\r\n            },\r\n\r\n            isTextNode: function(element) {\r\n                return element && element.nodeType === 3;\r\n            },\r\n\r\n            isDocument: function(element) {\r\n                return element && element.nodeType === 9;\r\n            }\r\n        });\r\n\r\n        httpRequest.inject({\r\n            getXhr: function() {\r\n                if (!xhrFactory) {\r\n                    return this.callBase.apply(this);\r\n                }\r\n                let _xhr = xhrFactory.build();\r\n                if (!('withCredentials' in _xhr)) {\r\n                    _xhr['withCredentials'] = false;\r\n                }\r\n\r\n                return _xhr;\r\n            }\r\n        });\r\n\r\n        ngZone.run(() => {\r\n            eventsEngine.set({});\r\n            callbacks.forEach(callback => originalAdd.call(null, callback));\r\n            readyCallbacks.fire();\r\n        });\r\n    }\r\n}\r\n"]}